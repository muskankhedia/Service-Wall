[{"Process":{"Description":"0alias is deprecated. Use '0install add' instead.","Process Name":"0alias","Link":"https:\/\/linux.die.net\/man\/1\/0alias"}},{"Process":{"Description":"0desktop can be used to create launchers for Zero Install applications in desktop environments supporting the freedesktop.org menu specification (e.g. GNOME and KDE). If the URI of a Zero Install application is given, this application is added. Without a URI, a dialog box is displayed prompting the user to specify what to add. On success, a launcher is added to the user's menu which, when invoked, runs the application using the command \"0launch URI\".","Process Name":"0desktop","Link":"https:\/\/linux.die.net\/man\/1\/0desktop"}},{"Process":{"Description":"Zero Install is a decentralised cross-distribution software installation system. Programs and libraries are identified by URIs, and there is no need for a central repository. Zero Install ensures that packages cannot conflict with each other and that programs can be shared between mutually untrusting users. See the web-site for more information: http:\/\/0install.net\/ The simplest case is to ask 0install to run a program, given its URI. For example: 0install run http:\/\/rox.sourceforge.net\/2005\/interfaces\/Edit The first time you do this, details about available versions of the program are downloaded and cached, along with details about any libraries it depends on. Zero Install will run a solver to select the best version of each component to use. For example, it will select binaries that are compatible with your CPU and operating system, in your preferred language, and marked \"stable\" (by default). If $DISPLAY is set, 0install will display a window where you can confirm (or change) the selected versions. It will then download the corresponding archives for those versions and store them in the cache too. Each package unpacks to its own directory. Finally, 0install will launch the program, setting environment variables to let it locate its libraries.","Process Name":"0install","Link":"https:\/\/linux.die.net\/man\/1\/0install"}},{"Process":{"Description":"0launch runs the given program. PROGRAM is either a URL in the form 'http:\/\/site\/program.xml' or a local path name like '\/path\/to\/program.xml'. If the program is not already on your computer, 0launch downloads information about which versions are available, and lets you choose one to download. It will also (automatically) do the same for any libraries the program needs. Note that much of the functionality that was originally in 0launch has now moved to 0install(1). 0launch PROGRAM ARGS is roughly equivalent to 0install run PROGRAM ARGS See the 0install(1) man-page for more information.","Process Name":"0launch","Link":"https:\/\/linux.die.net\/man\/1\/0launch"}},{"Process":{"Description":"0store provides access to the low-level implementation cache. Normally, the cache is updated automatically using 0launch(1).","Process Name":"0store","Link":"https:\/\/linux.die.net\/man\/1\/0store"}},{"Process":{"Description":"This command imports the current directory into the system-wide shared Zero Install cache, as \/var\/cache\/0install.net\/implementations\/DIGEST. This allows a program downloaded by one user to be shared with other users. The current directory must contain a file called '.manifest' listing all the files to be added (in the format required by DIGEST), and this file must have the given digest. If not, the import is refused. Therefore, it is only possible to add a directory to the cache if its name matches its contents. It is intended that it be safe to grant untrusted users permission to call this command with elevated privileges. To set this up, see below.","Process Name":"0store-secure-add","Link":"https:\/\/linux.die.net\/man\/1\/0store-secure-add"}}]